import com.android.build.gradle.internal.dsl.SigningConfig

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def getSigningConfig(signPropertiesFilePath) {
    SigningConfig signingConfig = new SigningConfig("signingConfig")
    File propertiesFile = file(signPropertiesFilePath)
    if (propertiesFile.exists()) {
        Properties props = new Properties()
        props.load(new FileInputStream(propertiesFile))
        signingConfig.storeFile = file(props['storeFile'])
        signingConfig.storePassword = props['storePassword']
        signingConfig.keyAlias = props['keyAlias']
        signingConfig.keyPassword = props['keyPassword']
        println('signConfig exits')
    } else {
        println('signConfig dose not exist')
        signingConfig = null
    }
    return signingConfig
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 31

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.xy.multifunction_calculator"
        minSdkVersion 16
        targetSdkVersion 31
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    buildTypes {
        debug {
            minifyEnabled false
            signingConfig getSigningConfig("../sign/keystore.properties")
        }
        release {
            minifyEnabled true
            signingConfig getSigningConfig("../sign/keystore.properties")
        }
    }
    flavorDimensions "default"
    productFlavors {
        master {
            dimension "default"
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def name = "Multifunction_calculator_${defaultConfig.versionName}_${variant.productFlavors[0].name}_${variant.buildType.name}.apk"
            output.outputFileName = new File(name)
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
